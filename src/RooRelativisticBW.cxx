/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooRelativisticBW.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooRelativisticBW) 

 RooRelativisticBW::RooRelativisticBW(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _mean,
                        RooAbsReal& _width) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   mean("mean","mean",this,_mean),
   width("width","width",this,_width)
 { 
 } 


 RooRelativisticBW::RooRelativisticBW(const RooRelativisticBW& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   mean("mean",this,other.mean),
   width("width",this,other.width)
 { 
 } 


 Double_t RooRelativisticBW::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
   double gamma = sqrt(pow(mean,2)*(pow(mean,2)+pow(width,2)));
   double k = 2*sqrt(2)*mean*width*gamma/(TMath::Pi()*sqrt(pow(mean,2)+gamma));
   double res = k/(pow((pow(x,2)-pow(mean,2)),2)+pow(mean*width,2));
   return res;
   //return 1.0 ; 
 } 



